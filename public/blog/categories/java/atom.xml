<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: java | Autonomous Networks Research Group]]></title>
  <link href="http://mindisblown.com/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://mindisblown.com/"/>
  <updated>2012-08-05T16:06:46-04:00</updated>
  <id>http://mindisblown.com/</id>
  <author>
    <name><![CDATA[Maheswaran Sathiamoorthy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Save an applet to an image in Java]]></title>
    <link href="http://mindisblown.com/blog/2012/06/27/save-an-applet-to-an-image-in-java/"/>
    <updated>2012-06-27T23:55:00-04:00</updated>
    <id>http://mindisblown.com/blog/2012/06/27/save-an-applet-to-an-image-in-java</id>
    <content type="html"><![CDATA[<p>Have you ever wanted to save a frame from a Java applet to an image file? In this quick piece of code, I will show you how to save an image produced by an applet to a file. Although it does a different thing, I pretty much wrote this code based on <a href="http://stackoverflow.com/questions/1584471/java-applet-saving-an-image-in-a-png-format">Evo's reply in StackOverflow</a>. This will be helpful if you want to save a series of frames to images and then animate by making a video, which is what I did to generate <a href="http://www.youtube.com/watch?v=gZQv8DFR6vo">this video</a>. I will explain in a later tutorial, how I made that video.</p>

<!-- more -->


<p>``` java Save an applet to an image</p>

<p>package com.smahesh;</p>

<p>import java.applet.Applet;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.GraphicsEnvironment;
import java.awt.RenderingHints;
import java.awt.Transparency;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;</p>

<p>import javax.imageio.ImageIO;</p>

<p>/<em>*
 * @author Maheswaran Sathiamoorthy
 * Autonomous Networks Research Group
 * University of Southern California
 *
 </em>/
public class ImageMaker extends Applet{</p>

<p>  int circleRadius = 10;
  private final int MAX_X = 600;
  private final int MAX_Y = 350;
  private BufferedImage bufferedImage;
  private final GraphicsConfiguration gConfig = GraphicsEnvironment</p>

<pre><code>  .getLocalGraphicsEnvironment().getDefaultScreenDevice()
  .getDefaultConfiguration();
</code></pre>

<p>  // If you plan to show on the screen on an applet, apart from saving as an image
  @Override
  public void start() {</p>

<pre><code>setSize(MAX_X, MAX_Y);
bufferedImage = create(MAX_X, MAX_Y, true);
</code></pre>

<p>  }</p>

<p>  // If you plan to show on the screen on an applet, apart from saving as an image
  @Override
  public void paint(Graphics g) {</p>

<pre><code>drawCircles(g);
storeImage();
</code></pre>

<p>  }</p>

<p>  public void storeImage() {</p>

<pre><code>BufferedImage image = create(MAX_X, MAX_Y, true);
Graphics2D g = image.createGraphics();
// you can disable this if you don't want smooth graphics
g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
drawCircles(g);
g.dispose();
try {
  ImageIO.write(image, "png", new File("/Users/Yourname/Documents/file.png"));
} catch (IOException e) {
</code></pre>

<p>   }
  }</p>

<p>  void drawCircles(Graphics g) {</p>

<pre><code>int count = 0;
for(int r = 10; r &lt;=200; r+=5) {
  int x = (int) (MAX_X/2 + r*Math.cos(count*Math.PI/180)) ;
  int y = (int) (MAX_Y/2 + r*Math.sin(count*Math.PI/180)) ;
  count = count + 20;
  g.setColor(Color.BLACK);
  g.drawOval(x, y, circleRadius, circleRadius);
  g.setColor(new Color((float)235/255, (float)173/255, (float)96/255, 1f));
  g.fillOval(x, y, circleRadius, circleRadius);
}
</code></pre>

<p>  }</p>

<p>  private BufferedImage create(final int width, final int height,</p>

<pre><code>  final boolean alpha) {
BufferedImage buffer = gConfig.createCompatibleImage(width, height,
          alpha ? Transparency.TRANSLUCENT : Transparency.OPAQUE);
return buffer;
</code></pre>

<p>  }
}
```
The output file that was saved by the above program:</p>

<p><img src="http://photos.smahesh.com/photos/i-MzRB7Dr/0/O/i-MzRB7Dr.png" alt="The output image of the applet generated by the program" /></p>

<p>Thats it!</p>
]]></content>
  </entry>
  
</feed>
